// groovylint-disable CompileStatic
pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }

    }
    stages {
        stage('Checkout') {
            steps {
                sh 'git clone'
                sh 'git checkout main'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd ultimate-pipeline/java && mvn clean package'
            }
        }
        stage('Sonar Code Analysis') {
            environment {
                SONAR_HOST_URL = 'http://localhost:9000'
            }
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh 'cd ultimate-pipeline/java && mvn sonar:sonar -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN'
                }
            }
        }
        stage('Build and Push Docker Image') {
                environment {
                    DOCKER_IMAGE = 'royrishwanth/java-ci-cd-app:$BUILD_NUMBER'
                    REGISTRY_CREDENTIALS = credentials('docker-cred)')
                }
                steps {
                    sh 'cd ultimate-pipeline/java && docker build -t $DOCKER_IMAGE .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred')
                    {
                        dockerImage.push()
                    }
                }
        }
        stage('Update Deplyment File')
        {
            environment {
                GIT_REPO_NAME = 'Jenkins-cicd'
                GIT_USER_NAME = 'royrishwanth'
            }
            steps {
                withCredentials([string(credentialsid: 'GITHUB_TOKEN', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "royrishwanth@gmail.com"
                        git config user.name "Rishwanth Kothapalli"
                        BUILD_NUMBER=$(BUILD_NUMBER)
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" k8-manifests/deployment.yml
                        git add k8-manifests/deployment.yml
                        git commit -m "Updated deployment file with build number ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}

